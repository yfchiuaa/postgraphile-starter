import { SQL, QueryBuilder } from "graphile-build-pg";
import { Build, Plugin } from "graphile-build";
declare type OrderBySpecIdentity = string | SQL | ((options: {
    queryBuilder: QueryBuilder;
}) => SQL);
declare type OrderSpec = [OrderBySpecIdentity, boolean] | [OrderBySpecIdentity, boolean, boolean];
export interface MakeAddPgTableOrderByPluginOrders {
    [orderByEnumValue: string]: {
        value: {
            alias?: string;
            specs: Array<OrderSpec>;
            unique: boolean;
        };
    };
}
export default function makeAddPgTableOrderByPlugin(schemaName: string, tableName: string, ordersGenerator: (build: Build) => MakeAddPgTableOrderByPluginOrders, hint?: string): Plugin;
export declare function orderByAscDesc(baseName: string, columnOrSqlFragment: OrderBySpecIdentity, unique?: boolean): MakeAddPgTableOrderByPluginOrders;
export {};
